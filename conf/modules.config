if (!params.skip_fastp) {
    process {
        withName: 'FASTP_MULTIQC:FASTP' {
            ext.args = { "--cut_front --cut_tail --trim_poly_x --cut_mean_quality 20 --qualified_quality_phred 20 --unqualified_percent_limit 20 --length_required ${params.trim_len}" }
            publishDir = [
                [
                    path: { "${params.output}/fastp/log" },
                    mode: 'copy',
                    pattern: "*.{json,html,log}"
                ],

            ]

        }
	withName: 'FASTP_MULTIQC:MULTIQC' {
		publishDir = [
		[
                    path: { "${params.output}/final_files" },
                    mode: 'copy',
                    pattern: "*multiqc.html",
                ]

		]
	}
    }

}

process {
	withName: 'METASPADES' {
		shell = '/bin/bash'
		publishDir = [
			[
				path: { "${params.output}/metaspades/${meta.id}" },
				mode: 'copy',
				pattern: "*.{fasta}"
			]
		]
	}
}

process {
	withName: 'MEGAHIT' {
		publishDir = [
			[
				path: { "${params.output}/megahit/" },
				mode: 'copy',
				pattern: "*/final.contigs.fa"
			]
		]
	}
}

process {
	withName: 'KRAKEN2' {
		ext.args = '--report-zero-counts'
		publishDir = [
			[
				path: { "${params.output}/kraken2" },
				mode: 'copy',
				pattern: "*.report.txt"
			],
		]
	}
}

process {

	withName: 'FILTER_AND_GLUE_CONTIGS' {
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}" }
	}

	withName: 'EXTEND_SCAFFOLDS' {
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}" }
	}

	withName: 'GAPFILL_WITH_READS' {
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}" }
		publishDir = [
			path: { "${params.output}/read_filled" },
			mode: 'copy',
			pattern: "*gapfilled.fasta"
		]
	}
	withName: 'GAPFILL_WITH_REF' {
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}" }
		publishDir = [
			path: { "${params.output}/ref_filled" },
			mode: 'copy',
			pattern: "*imputed.fasta"
		]
	}
}

process {

	withName: 'MAKE_REFERENCE_FASTA' {
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}" }
		publishDir = [
			path: { "${params.output}/final_files/align_to_selected_ref" },
			mode: 'copy',
			pattern: "*.fa"
		]
	}

	withName: 'CONSENSUS_ASSEMBLY:BWA_MEM2_INITIAL' {
		ext.min_coverage = {'30'}
		ext.min_depth = {'3'}
		ext.iter = "ref"
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_ref" }
		publishDir = [
			[
				path: { "${params.output}/final_files/align_to_selected_ref" },
				mode: 'copy',
				pattern: "*.{bam,bai}"
			],
			[
				path: { "${params.output}/fail/align_to_reference" },
				mode: 'copy',
				pattern: "*_failed_assembly.tsv"
			]
		]
	}

	withName: 'CONSENSUS_ASSEMBLY:IVAR_CONSENSUS_INITIAL' {
		ext.args = { "-t 0.6 -q 20 -m 1 -n N" }
		ext.args2 = '--count-orphans --no-BAQ --max-depth 0 --min-BQ 0 -aa'
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_consensus1" }
		publishDir = [ 
			path: { "${params.output}/final_files/align_to_consensus" },
			mode: 'copy',
			pattern: "*.fa"
		]
	}

	withName: 'CONSENSUS_ASSEMBLY:BWA_MEM2_FINAL' {
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_consensus1" }
		ext.iter = "con1"
		ext.min_coverage = {'60'}
		ext.min_depth = {'5'}
		publishDir = [
			[
				path: { "${params.output}/final_files/align_to_consensus" },
				mode: 'copy',
				pattern: "*.{bam,bai}",
			],
			[
				path: { "${params.output}/fail/align_to_consensus" },
				mode: 'copy',
				pattern: "*_failed_assembly.tsv"
			]
		]
	}

	withName: 'CONSENSUS_ASSEMBLY:IVAR_CONSENSUS_FINAL' {
		ext.args = { "-t 0.4 -q 20 -m 3 -n N" }
		ext.args2 = '--count-orphans --no-BAQ --max-depth 0 --min-BQ 0 -aa'
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_consensus_final" }
		publishDir = [ 
			path: { "${params.output}/final_files/final_assemblies" },
			mode: 'copy',
			pattern: "*.fa"
		]
	}

	withName: 'CONTIG_STATS' {
		ext.prefix = { "${meta.id}_${ref_info.tag}" }
	}

	withName: 'SUMMARY' {
		ext.prefix = { "${meta.id}_${ref_info.tag}" }
	}
}
