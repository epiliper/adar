if (!params.skip_fastp) {
    process {
        withName: 'FASTP_MULTIQC:FASTP' {
            ext.args = { "--cut_front --cut_tail --trim_poly_x --cut_mean_quality 20 --qualified_quality_phred 20 --unqualified_percent_limit 20 --length_required ${params.trim_len}" }
            publishDir = [
                [
                    path: { "${params.output}/fastp/log" },
                    mode: 'copy',
                    pattern: "*.{json,html,log}"
                ],

            ]

        }
	withName: 'FASTP_MULTIQC:MULTIQC' {
		publishDir = [
		[
                    path: { "${params.output}/final_files" },
                    mode: 'copy',
                    pattern: "*multiqc.html",
                ]

		]
	}
    }

}

if (!params.skip_dedup) {
	process {
		withName: 'CD_HIT_DUP' {
			publishDir = [
				[
				path: { "${params.output}/dedup_reads" },
				mode: 'copy',
				pattern: "*_dedup.fastq"
				]
			]

		}
		}
}

process {
	withName: 'METASPADES' {
		shell = '/bin/bash'
		publishDir = [
			[
				path: { "${params.output}/metaspades/${meta.id}" },
				mode: 'copy',
				pattern: "*.{fasta}"
			]
		]
	}
}

process {
	withName: 'MEGAHIT' {
		publishDir = [
			[
				path: { "${params.output}/megahit/" },
				mode: 'copy',
				pattern: "*/final.contigs.fa"
			]
		]
	}
}

process {
	withName: 'CHOOSE_BEST_REF' {
		ext.prefix = {"${meta.id}"}
		publishDir = [
			path: { "${params.output}/chosen_refs" },
			mode: 'copy',
			pattern: "*_ref.fasta"
		]
	}
}

if (params.run_kraken2) {
	process {
		withName: 'KRAKEN2' {
			ext.args = '--report-zero-counts'
			publishDir = [
				[
					path: { "${params.output}/kraken2" },
					mode: 'copy',
					pattern: "*.report.txt"
				],
			]
		}
	}
}

process {
	withName: 'GAPFILL_GAP2SEQ' {
		ext.prefix = {"${meta.id}"}
		publishDir = [
			path: { "${params.output}/imputed_assemblies" },
			mode: 'copy',
			pattern: "*gapfilled.fasta"
		]
	}
}

process {
	withName: 'BWA_MEM2_ALIGN' {
		ext.prefix = {"$meta.id"}
		publishDir = [
			path: {"${params.output}/align"},
			mode: 'copy',
			pattern: "*.{bam,bai}"
		]
	}
}
